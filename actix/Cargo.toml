[package]
name = "actix-web"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
# Webframework
actix-web = { version = ">=4.5.1" }
# Session framework for actix-web
actix-session = { version = "~0.9", features = ["cookie-session"] }
# Async trait, anyhow, chrono, once_cell and rand are required for the implementation of a
# server-side memory-backed session store.
# Normally, you want to use a database / redis backend as session store, but for the simplicity of this
# tutorial, we implement our own.
async-trait = { version = "~0.1" }
anyhow = { version = "~1" }
chrono = { version = "~0.4" }
once_cell = { version = ">=1.18" }

# Nicer error management
thiserror = { version = "~1" }

# Serve static file. Used to serve wasm
actix-files = { version = "~0.6" }

# Async runtime
tokio = { version = "1.22.0", features = ["macros", "rt-multi-thread"] }

# Logging framework + facade
env_logger = { version = "~0.10" }
log = { version = "~0.4" }

# Webauthn framework
webauthn-rs = { version = "0.5", features = ["danger-allow-state-serialisation"] }
rand = "0.8"
actix-cors = "0.7.0"